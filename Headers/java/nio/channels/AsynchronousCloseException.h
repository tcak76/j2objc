//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/nio/channels/AsynchronousCloseException.java
//

#include "../../../J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaNioChannelsAsynchronousCloseException")
#ifdef RESTRICT_JavaNioChannelsAsynchronousCloseException
#define INCLUDE_ALL_JavaNioChannelsAsynchronousCloseException 0
#else
#define INCLUDE_ALL_JavaNioChannelsAsynchronousCloseException 1
#endif
#undef RESTRICT_JavaNioChannelsAsynchronousCloseException

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaNioChannelsAsynchronousCloseException_) && (INCLUDE_ALL_JavaNioChannelsAsynchronousCloseException || defined(INCLUDE_JavaNioChannelsAsynchronousCloseException))
#define JavaNioChannelsAsynchronousCloseException_

#define RESTRICT_JavaNioChannelsClosedChannelException 1
#define INCLUDE_JavaNioChannelsClosedChannelException 1
#include "../../../java/nio/channels/ClosedChannelException.h"

/*!
 @brief An <code>AsynchronousCloseException</code> is thrown when the underlying channel
 for an I/O operation is closed by another thread.
 */
@interface JavaNioChannelsAsynchronousCloseException : JavaNioChannelsClosedChannelException

#pragma mark Public

/*!
 @brief Constructs an <code>AsynchronousCloseException</code>.
 */
- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaNioChannelsAsynchronousCloseException)

FOUNDATION_EXPORT void JavaNioChannelsAsynchronousCloseException_init(JavaNioChannelsAsynchronousCloseException *self);

FOUNDATION_EXPORT JavaNioChannelsAsynchronousCloseException *new_JavaNioChannelsAsynchronousCloseException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaNioChannelsAsynchronousCloseException *create_JavaNioChannelsAsynchronousCloseException_init();

J2OBJC_TYPE_LITERAL_HEADER(JavaNioChannelsAsynchronousCloseException)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaNioChannelsAsynchronousCloseException")
