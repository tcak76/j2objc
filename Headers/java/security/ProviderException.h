//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/security/ProviderException.java
//

#include "../../J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaSecurityProviderException")
#ifdef RESTRICT_JavaSecurityProviderException
#define INCLUDE_ALL_JavaSecurityProviderException 0
#else
#define INCLUDE_ALL_JavaSecurityProviderException 1
#endif
#undef RESTRICT_JavaSecurityProviderException

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaSecurityProviderException_) && (INCLUDE_ALL_JavaSecurityProviderException || defined(INCLUDE_JavaSecurityProviderException))
#define JavaSecurityProviderException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "../../java/lang/RuntimeException.h"

/*!
 @brief <code>ProviderException</code> is a general exception, thrown by security <code>Providers</code>
 .
 - seealso: Provider
 */
@interface JavaSecurityProviderException : JavaLangRuntimeException

#pragma mark Public

/*!
 @brief Constructs a new instance of <code>ProviderException</code>.
 */
- (instancetype)init;

/*!
 @brief Constructs a new instance of <code>ProviderException</code> with the given
 message.
 @param msg
 the detail message for this exception.
 */
- (instancetype)initWithNSString:(NSString *)msg;

/*!
 @brief Constructs a new instance of <code>ProviderException</code> with the given
 message and the cause.
 @param message
 the detail message for this exception.
 @param cause
 the exception which is the cause for this exception.
 */
- (instancetype)initWithNSString:(NSString *)message
                 withNSException:(NSException *)cause;

/*!
 @brief Constructs a new instance of <code>ProviderException</code> with the cause.
 @param cause
 the exception which is the cause for this exception.
 */
- (instancetype)initWithNSException:(NSException *)cause;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaSecurityProviderException)

FOUNDATION_EXPORT void JavaSecurityProviderException_initWithNSString_(JavaSecurityProviderException *self, NSString *msg);

FOUNDATION_EXPORT JavaSecurityProviderException *new_JavaSecurityProviderException_initWithNSString_(NSString *msg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaSecurityProviderException *create_JavaSecurityProviderException_initWithNSString_(NSString *msg);

FOUNDATION_EXPORT void JavaSecurityProviderException_init(JavaSecurityProviderException *self);

FOUNDATION_EXPORT JavaSecurityProviderException *new_JavaSecurityProviderException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaSecurityProviderException *create_JavaSecurityProviderException_init();

FOUNDATION_EXPORT void JavaSecurityProviderException_initWithNSString_withNSException_(JavaSecurityProviderException *self, NSString *message, NSException *cause);

FOUNDATION_EXPORT JavaSecurityProviderException *new_JavaSecurityProviderException_initWithNSString_withNSException_(NSString *message, NSException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaSecurityProviderException *create_JavaSecurityProviderException_initWithNSString_withNSException_(NSString *message, NSException *cause);

FOUNDATION_EXPORT void JavaSecurityProviderException_initWithNSException_(JavaSecurityProviderException *self, NSException *cause);

FOUNDATION_EXPORT JavaSecurityProviderException *new_JavaSecurityProviderException_initWithNSException_(NSException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaSecurityProviderException *create_JavaSecurityProviderException_initWithNSException_(NSException *cause);

J2OBJC_TYPE_LITERAL_HEADER(JavaSecurityProviderException)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaSecurityProviderException")
