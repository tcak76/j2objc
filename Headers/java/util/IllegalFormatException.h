//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/IllegalFormatException.java
//

#include "../../J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaUtilIllegalFormatException")
#ifdef RESTRICT_JavaUtilIllegalFormatException
#define INCLUDE_ALL_JavaUtilIllegalFormatException 0
#else
#define INCLUDE_ALL_JavaUtilIllegalFormatException 1
#endif
#undef RESTRICT_JavaUtilIllegalFormatException

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaUtilIllegalFormatException_) && (INCLUDE_ALL_JavaUtilIllegalFormatException || defined(INCLUDE_JavaUtilIllegalFormatException))
#define JavaUtilIllegalFormatException_

#define RESTRICT_JavaLangIllegalArgumentException 1
#define INCLUDE_JavaLangIllegalArgumentException 1
#include "../../java/lang/IllegalArgumentException.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "../../java/io/Serializable.h"

/*!
 @brief An <code>IllegalFormatException</code> is thrown when a format string that
 contains either an illegal syntax or format specifier is transferred as a
 parameter.
 Only subclasses inheriting explicitly from this exception are
 allowed to be instantiated.
 - seealso: java.lang.RuntimeException
 */
@interface JavaUtilIllegalFormatException : JavaLangIllegalArgumentException < JavaIoSerializable >

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaUtilIllegalFormatException)

FOUNDATION_EXPORT void JavaUtilIllegalFormatException_init(JavaUtilIllegalFormatException *self);

FOUNDATION_EXPORT JavaUtilIllegalFormatException *new_JavaUtilIllegalFormatException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaUtilIllegalFormatException *create_JavaUtilIllegalFormatException_init();

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilIllegalFormatException)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaUtilIllegalFormatException")
