//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/Dictionary.java
//

#include "../../J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaUtilDictionary")
#ifdef RESTRICT_JavaUtilDictionary
#define INCLUDE_ALL_JavaUtilDictionary 0
#else
#define INCLUDE_ALL_JavaUtilDictionary 1
#endif
#undef RESTRICT_JavaUtilDictionary

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaUtilDictionary_) && (INCLUDE_ALL_JavaUtilDictionary || defined(INCLUDE_JavaUtilDictionary))
#define JavaUtilDictionary_

@protocol JavaUtilEnumeration;

/*!
 @brief <strong>Note: Do not use this class since it is obsolete.
 Please use the
 <code>Map</code> interface for new implementations.</strong>
 <p>
 Dictionary is an abstract class which is the superclass of all classes that
 associate keys with values, such as <code>Hashtable</code>.
 - seealso: Hashtable
 @since 1.0
 */
@interface JavaUtilDictionary : NSObject

#pragma mark Public

/*!
 @brief Constructs a new instance of this class.
 */
- (instancetype)init;

/*!
 @brief Returns an enumeration on the elements of this dictionary.
 @return an enumeration of the values of this dictionary.
 - seealso: #keys
 - seealso: #size
 - seealso: Enumeration
 */
- (id<JavaUtilEnumeration>)elements;

/*!
 @brief Returns the value which is associated with <code>key</code>.
 @param key
 the key of the value returned.
 @return the value associated with <code>key</code>, or <code>null</code> if the
 specified key does not exist.
 - seealso: #put
 */
- (id)getWithId:(id)key;

/*!
 @brief Returns true if this dictionary has no key/value pairs.
 @return <code>true</code> if this dictionary has no key/value pairs,
 <code>false</code> otherwise.
 - seealso: #size
 */
- (jboolean)isEmpty;

/*!
 @brief Returns an enumeration on the keys of this dictionary.
 @return an enumeration of the keys of this dictionary.
 - seealso: #elements
 - seealso: #size
 - seealso: Enumeration
 */
- (id<JavaUtilEnumeration>)keys;

/*!
 @brief Associate <code>key</code> with <code>value</code> in this dictionary.
 If <code>key</code>
  exists in the dictionary before this call, the old value in the
 dictionary is replaced by <code>value</code>.
 @param key
 the key to add.
 @param value
 the value to add.
 @return the old value previously associated with <code>key</code> or <code>null</code>
  if <code>key</code> is new to the dictionary.
 - seealso: #elements
 - seealso: #get
 - seealso: #keys
 */
- (id)putWithId:(id)key
         withId:(id)value;

/*!
 @brief Removes the key/value pair with the specified <code>key</code> from this
 dictionary.
 @param key
 the key to remove.
 @return the associated value before the deletion or <code>null</code> if
 <code>key</code> was not known to this dictionary.
 - seealso: #get
 - seealso: #put
 */
- (id)removeWithId:(id)key;

/*!
 @brief Returns the number of key/value pairs in this dictionary.
 @return the number of key/value pairs in this dictionary.
 - seealso: #elements
 - seealso: #keys
 */
- (jint)size;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaUtilDictionary)

FOUNDATION_EXPORT void JavaUtilDictionary_init(JavaUtilDictionary *self);

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilDictionary)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaUtilDictionary")
