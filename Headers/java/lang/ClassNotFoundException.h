//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/lang/ClassNotFoundException.java
//

#include "../../J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaLangClassNotFoundException")
#ifdef RESTRICT_JavaLangClassNotFoundException
#define INCLUDE_ALL_JavaLangClassNotFoundException 0
#else
#define INCLUDE_ALL_JavaLangClassNotFoundException 1
#endif
#undef RESTRICT_JavaLangClassNotFoundException

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaLangClassNotFoundException_) && (INCLUDE_ALL_JavaLangClassNotFoundException || defined(INCLUDE_JavaLangClassNotFoundException))
#define JavaLangClassNotFoundException_

#define RESTRICT_JavaLangReflectiveOperationException 1
#define INCLUDE_JavaLangReflectiveOperationException 1
#include "../../java/lang/ReflectiveOperationException.h"

/*!
 @brief Thrown when a class loader is unable to find a class.
 */
@interface JavaLangClassNotFoundException : JavaLangReflectiveOperationException

#pragma mark Public

/*!
 @brief Constructs a new <code>ClassNotFoundException</code> that includes the current
 stack trace.
 */
- (instancetype)init;

/*!
 @brief Constructs a new <code>ClassNotFoundException</code> with the current stack
 trace and the specified detail message.
 @param detailMessage
 the detail message for this exception.
 */
- (instancetype)initWithNSString:(NSString *)detailMessage;

/*!
 @brief Constructs a new <code>ClassNotFoundException</code> with the current stack
 trace, the specified detail message and the exception that occurred when
 loading the class.
 @param detailMessage
 the detail message for this exception.
 @param exception
 the exception which occurred while loading the class.
 */
- (instancetype)initWithNSString:(NSString *)detailMessage
                 withNSException:(NSException *)exception;

/*!
 @brief Returns the cause of this Throwable, or <code>null</code> if there is no
 cause.
 @return Throwable the receiver's cause.
 */
- (NSException *)getCause;

/*!
 @brief Returns the exception which occurred when loading the class.
 @return Throwable the exception which occurred while loading the class.
 */
- (NSException *)getException;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaLangClassNotFoundException)

FOUNDATION_EXPORT void JavaLangClassNotFoundException_init(JavaLangClassNotFoundException *self);

FOUNDATION_EXPORT JavaLangClassNotFoundException *new_JavaLangClassNotFoundException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaLangClassNotFoundException *create_JavaLangClassNotFoundException_init();

FOUNDATION_EXPORT void JavaLangClassNotFoundException_initWithNSString_(JavaLangClassNotFoundException *self, NSString *detailMessage);

FOUNDATION_EXPORT JavaLangClassNotFoundException *new_JavaLangClassNotFoundException_initWithNSString_(NSString *detailMessage) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaLangClassNotFoundException *create_JavaLangClassNotFoundException_initWithNSString_(NSString *detailMessage);

FOUNDATION_EXPORT void JavaLangClassNotFoundException_initWithNSString_withNSException_(JavaLangClassNotFoundException *self, NSString *detailMessage, NSException *exception);

FOUNDATION_EXPORT JavaLangClassNotFoundException *new_JavaLangClassNotFoundException_initWithNSString_withNSException_(NSString *detailMessage, NSException *exception) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaLangClassNotFoundException *create_JavaLangClassNotFoundException_initWithNSString_withNSException_(NSString *detailMessage, NSException *exception);

J2OBJC_TYPE_LITERAL_HEADER(JavaLangClassNotFoundException)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaLangClassNotFoundException")
