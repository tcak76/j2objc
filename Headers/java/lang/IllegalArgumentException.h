//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/lang/IllegalArgumentException.java
//

#include "../../J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaLangIllegalArgumentException")
#ifdef RESTRICT_JavaLangIllegalArgumentException
#define INCLUDE_ALL_JavaLangIllegalArgumentException 0
#else
#define INCLUDE_ALL_JavaLangIllegalArgumentException 1
#endif
#undef RESTRICT_JavaLangIllegalArgumentException

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaLangIllegalArgumentException_) && (INCLUDE_ALL_JavaLangIllegalArgumentException || defined(INCLUDE_JavaLangIllegalArgumentException))
#define JavaLangIllegalArgumentException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "../../java/lang/RuntimeException.h"

/*!
 @brief Thrown when a method is invoked with an argument which it can not reasonably
 deal with.
 */
@interface JavaLangIllegalArgumentException : JavaLangRuntimeException

#pragma mark Public

/*!
 @brief Constructs a new <code>IllegalArgumentException</code> that includes the
 current stack trace.
 */
- (instancetype)init;

/*!
 @brief Constructs a new <code>IllegalArgumentException</code> with the current stack
 trace and the specified detail message.
 @param detailMessage
 the detail message for this exception.
 */
- (instancetype)initWithNSString:(NSString *)detailMessage;

/*!
 @brief Constructs a new <code>IllegalArgumentException</code> with the current stack
 trace, the specified detail message and the specified cause.
 @param message
 the detail message for this exception.
 @param cause
 the cause of this exception, may be <code>null</code>.
 @since 1.5
 */
- (instancetype)initWithNSString:(NSString *)message
                 withNSException:(NSException *)cause;

/*!
 @brief Constructs a new <code>IllegalArgumentException</code> with the current stack
 trace and the specified cause.
 @param cause
 the cause of this exception, may be <code>null</code>.
 @since 1.5
 */
- (instancetype)initWithNSException:(NSException *)cause;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaLangIllegalArgumentException)

FOUNDATION_EXPORT void JavaLangIllegalArgumentException_init(JavaLangIllegalArgumentException *self);

FOUNDATION_EXPORT JavaLangIllegalArgumentException *new_JavaLangIllegalArgumentException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaLangIllegalArgumentException *create_JavaLangIllegalArgumentException_init();

FOUNDATION_EXPORT void JavaLangIllegalArgumentException_initWithNSString_(JavaLangIllegalArgumentException *self, NSString *detailMessage);

FOUNDATION_EXPORT JavaLangIllegalArgumentException *new_JavaLangIllegalArgumentException_initWithNSString_(NSString *detailMessage) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaLangIllegalArgumentException *create_JavaLangIllegalArgumentException_initWithNSString_(NSString *detailMessage);

FOUNDATION_EXPORT void JavaLangIllegalArgumentException_initWithNSString_withNSException_(JavaLangIllegalArgumentException *self, NSString *message, NSException *cause);

FOUNDATION_EXPORT JavaLangIllegalArgumentException *new_JavaLangIllegalArgumentException_initWithNSString_withNSException_(NSString *message, NSException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaLangIllegalArgumentException *create_JavaLangIllegalArgumentException_initWithNSString_withNSException_(NSString *message, NSException *cause);

FOUNDATION_EXPORT void JavaLangIllegalArgumentException_initWithNSException_(JavaLangIllegalArgumentException *self, NSException *cause);

FOUNDATION_EXPORT JavaLangIllegalArgumentException *new_JavaLangIllegalArgumentException_initWithNSException_(NSException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaLangIllegalArgumentException *create_JavaLangIllegalArgumentException_initWithNSException_(NSException *cause);

J2OBJC_TYPE_LITERAL_HEADER(JavaLangIllegalArgumentException)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaLangIllegalArgumentException")
